{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulator, currentElement) => accumulator + currentElement.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulator, currentElement) => accumulator + currentElement.quantity * currentElement.price, 0));","map":{"version":3,"sources":["/home/adrianduque/Documentos/Formacion/React Developer/e-commerce/crwn-clothing/client/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumulator","currentElement","quantity","selectCartTotal","price"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAApC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CACzC,CAACC,UAAD,CADyC,EAExCE,IAAD,IAASA,IAAI,CAACE,SAF2B,CAAtC;AAIP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC1C,CAACC,UAAD,CAD0C,EAEzCE,IAAD,IAAUA,IAAI,CAACI,MAF2B,CAAvC;AAKP,OAAO,MAAMC,oBAAoB,GAAGR,cAAc,CAC9C,CAACI,eAAD,CAD8C,EAE7CC,SAAD,IAAeA,SAAS,CAACI,MAAV,CACP,CAACC,WAAD,EAAcC,cAAd,KAAgCD,WAAW,GAAEC,cAAc,CAACC,QADrD,EAC8D,CAD9D,CAF+B,CAA3C;AAOP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CACzC,CAACI,eAAD,CADyC,EAExCC,SAAD,IAAeA,SAAS,CAACI,MAAV,CACP,CAACC,WAAD,EAAcC,cAAd,KAAgCD,WAAW,GAAIC,cAAc,CAACC,QAAf,GAAyBD,cAAc,CAACG,KADhF,EACuF,CADvF,CAF0B,CAAtC","sourcesContent":["import {createSelector} from 'reselect'\n\nconst selectCart = (state) => state.cart\n\nexport const selectCartItems = createSelector(\n    [selectCart],\n    (cart)=> cart.cartItems\n)\nexport const selectCartHidden = createSelector(\n    [selectCart],\n    (cart) => cart.hidden\n)\n\nexport const selectCartItemsCount = createSelector(\n    [selectCartItems],\n    (cartItems) => cartItems.reduce(\n            (accumulator, currentElement)=> accumulator+ currentElement.quantity,0\n            )\n)\n\nexport const selectCartTotal = createSelector(\n    [selectCartItems],\n    (cartItems) => cartItems.reduce(\n            (accumulator, currentElement)=> accumulator + (currentElement.quantity* currentElement.price),0\n            )\n)"]},"metadata":{},"sourceType":"module"}