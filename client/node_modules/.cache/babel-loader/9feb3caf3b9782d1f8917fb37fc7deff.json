{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBnQ62bKTnFqyR_SWvXCTwvqVCi3Xu7xHU\",\n  authDomain: \"crwn-clothing-db-3ecec.firebaseapp.com\",\n  databaseURL: \"https://crwn-clothing-db-3ecec.firebaseio.com\",\n  projectId: \"crwn-clothing-db-3ecec\",\n  storageBucket: \"crwn-clothing-db-3ecec.appspot.com\",\n  messagingSenderId: \"9941383676\",\n  appId: \"1:9941383676:web:7f21813389c80437329a79\",\n  measurementId: \"G-P628ZLCXHZ\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (e) {\n      console.log(e.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  await batch.commit();\n};\nexport const convertCollectionSnapshotToMap = collection => {\n  const transformedCollection = collection.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account '\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/adria/Documents/GitHub/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","e","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionSnapshotToMap","transformedCollection","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","accumulator","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBnQ62bKTnFqyR_SWvXCTwvqVCi3Xu7xHU\",\r\n    authDomain: \"crwn-clothing-db-3ecec.firebaseapp.com\",\r\n    databaseURL: \"https://crwn-clothing-db-3ecec.firebaseio.com\",\r\n    projectId: \"crwn-clothing-db-3ecec\",\r\n    storageBucket: \"crwn-clothing-db-3ecec.appspot.com\",\r\n    messagingSenderId: \"9941383676\",\r\n    appId: \"1:9941383676:web:7f21813389c80437329a79\",\r\n    measurementId: \"G-P628ZLCXHZ\"\r\n  };\r\n\r\n  export const createUserProfileDocument = async (userAuth, additionalData) =>{\r\n    if(!userAuth) return;\r\n\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`)\r\n    const snapShot = await  userRef.get()\r\n\r\n    if(!snapShot.exists){\r\n      const {displayName, email} = userAuth\r\n      const createdAt = new Date()\r\n\r\n      try{\r\n        await userRef.set({\r\n          displayName,\r\n          email,\r\n          createdAt,\r\n          ...additionalData\r\n        })\r\n\r\n      }catch(e){\r\n        console.log(e.message)\r\n\r\n      }\r\n\r\n    }\r\n    return userRef\r\n  }\r\n\r\n\r\nexport const addCollectionAndDocuments= async (collectionKey, objectsToAdd) =>{\r\n  const collectionRef = firestore.collection(collectionKey)\r\n\r\n  const batch = firestore.batch()\r\n  objectsToAdd.forEach(obj => {\r\n    const newDocRef = collectionRef.doc()\r\n    batch.set(newDocRef,obj)\r\n  })\r\n\r\n  await batch.commit()\r\n}\r\n\r\nexport const convertCollectionSnapshotToMap=(collection)=>{\r\n  const transformedCollection = collection.docs.map(doc =>{\r\n    const {title, items} = doc.data();\r\n    return{\r\n      routeName: encodeURI(title.toLowerCase()),\r\n      id: doc.id,\r\n      title,\r\n      items\r\n    }\r\n  })\r\n\r\n  transformedCollection.reduce((accumulator, collection) => {\r\n    accumulator[collection.title.toLowerCase()]= collection;\r\n    return accumulator\r\n  },{})\r\n}\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nexport const auth = firebase.auth()\r\nexport const firestore = firebase.firestore()\r\n\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider()\r\nprovider.setCustomParameters({prompt: 'select_account '})\r\n\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider)\r\n\r\nexport default firebase\r\n"]},"metadata":{},"sourceType":"module"}