{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adria\\\\Documents\\\\GitHub\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectIsCollectionLoaded } from '../../redux/shop/shop.selector';\nimport WithSpinner from '../../HOC/with-spinner/with-spinner.component';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({\n  match,\n  isFetching,\n  isLoaded,\n  fetchCollectionsStartAsync\n}) => {\n  useEffect(() => {\n    fetchCollectionsStartAsync();\n  }); //,[fetchCollectionsStartAsync])\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n      isLoading: isFetching\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 71\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n      isLoading: !isLoaded\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 83\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isFetching: selectIsCollectionFetching,\n  isLoaded: selectIsCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/adria/Documents/GitHub/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","Route","connect","createStructuredSelector","CollectionsOverview","CollectionPage","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionLoaded","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","match","isFetching","isLoaded","path","props","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAAQC,0BAAR,EAAoCC,wBAApC,QAAmE,gCAAnE;AACA,OAAOC,WAAP,MAAwB,+CAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACL,mBAAD,CAAlD;AACA,MAAMO,yBAAyB,GAAGF,WAAW,CAACJ,cAAD,CAA7C;;AAEA,MAAMO,QAAQ,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,UAAR;AAAoBC,EAAAA,QAApB;AAA8BT,EAAAA;AAA9B,CAAD,KAA8D;AAE3EN,EAAAA,SAAS,CAAC,MAAI;AACVM,IAAAA,0BAA0B;AAC7B,GAFQ,CAAT,CAF2E,CAIxE;;AAGC,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,GAAEO,KAAK,CAACG,IAAK,EAAjC;AAAoC,IAAA,MAAM,EAAGC,KAAD,iBAAU,oBAAC,8BAAD;AAAgC,MAAA,SAAS,EAAEH;AAA3C,OAA2DG,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,KAAD;AAAQ,IAAA,IAAI,EAAK,GAAEJ,KAAK,CAACG,IAAK,gBAA9B;AAAgD,IAAA,MAAM,EAAGC,KAAD,iBAAU,oBAAC,yBAAD;AAA2B,MAAA,SAAS,EAAE,CAACF;AAAvC,OAAqDE,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMP,CAbD;;AAeA,MAAMC,eAAe,GAAGf,wBAAwB,CAAC;AAC7CW,EAAAA,UAAU,EAAEP,0BADiC;AAE7CQ,EAAAA,QAAQ,EAAEP;AAFmC,CAAD,CAAhD;;AAKA,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACpCd,EAAAA,0BAA0B,EAAE,MAAKc,QAAQ,CAACd,0BAA0B,EAA3B;AADL,CAAL,CAAnC;;AAIA,eAAeJ,OAAO,CAACgB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CP,QAA7C,CAAf","sourcesContent":["import React, {useEffect} from 'react'\r\nimport {Route} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {createStructuredSelector} from 'reselect'\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component'\r\nimport CollectionPage from '../collection/collection.component'\r\n\r\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions'\r\nimport {selectIsCollectionFetching, selectIsCollectionLoaded} from '../../redux/shop/shop.selector'\r\nimport WithSpinner from '../../HOC/with-spinner/with-spinner.component'\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nconst ShopPage = ({match, isFetching, isLoaded, fetchCollectionsStartAsync}) =>{\r\n \r\n    useEffect(()=>{\r\n        fetchCollectionsStartAsync()\r\n    },)//,[fetchCollectionsStartAsync])\r\n\r\n\r\n        return(\r\n            <div className=\"shop-page\">\r\n                <Route exact path={`${match.path}`} render={(props)=> <CollectionsOverviewWithSpinner isLoading={isFetching} {...props}/>}/>\r\n                <Route  path = {`${match.path}/:collectionId`}  render={(props)=> <CollectionPageWithSpinner isLoading={!isLoaded} {...props}/>}/>\r\n            </div>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isFetching: selectIsCollectionFetching,\r\n    isLoaded: selectIsCollectionLoaded\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchCollectionsStartAsync: ()=> dispatch(fetchCollectionsStartAsync())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage)"]},"metadata":{},"sourceType":"module"}