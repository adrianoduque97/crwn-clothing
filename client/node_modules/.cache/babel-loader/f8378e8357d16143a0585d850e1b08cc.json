{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adria\\\\Documents\\\\GitHub\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport { selectCollectionsForPreview } from '../../redux/shop/shop.selector';\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsuscribedFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    console.log(\"HEEERE\");\n    console.log(collectionRef);\n    this.unsuscribedFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/adria/Documents/GitHub/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","firestore","convertCollectionSnapshotToMap","CollectionsOverview","CollectionPage","updateCollections","selectCollectionsForPreview","ShopPage","Component","unsuscribedFromSnapshot","componentDidMount","props","collectionRef","collection","console","log","onSnapshot","snapshot","collectionsMap","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,EAAmBC,8BAAnB,QAAwD,+BAAxD;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,SAASC,2BAAT,QAA4C,gCAA5C;;AAEA,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAElCC,uBAFkC,GAER,IAFQ;AAAA;;AAIlCC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACL,MAAAA;AAAD,QAAsB,KAAKM,KAAjC;AACA,UAAMC,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYH,aAAZ;AAEA,SAAKH,uBAAL,GAA+BG,aAAa,CAACI,UAAd,CAAyB,MAAMC,QAAN,IAAiB;AACtE,YAAMC,cAAc,GAAGhB,8BAA8B,CAACe,QAAD,CAArD;AACAZ,MAAAA,iBAAiB,CAACa,cAAD,CAAjB;AACF,KAH8B,CAA/B;AAIH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKT,KAArB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAES,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAElB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAQ,MAAA,IAAI,EAAK,GAAEiB,KAAK,CAACC,IAAK,gBAA9B;AAAgD,MAAA,SAAS,EAAEjB,cAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAxBiC;;AA2BtC,MAAMkB,kBAAkB,GAAGC,QAAQ,KAAK;AACpClB,EAAAA,iBAAiB,EAAEa,cAAc,IAAIK,QAAQ,CAAClB,iBAAiB,CAACa,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAIA,eAAelB,OAAO,CAAC,IAAD,EAAOsB,kBAAP,CAAP,CAAkCf,QAAlC,CAAf","sourcesContent":["import React from 'react'\r\nimport {Route} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {firestore, convertCollectionSnapshotToMap} from '../../firebase/firebase.utils'\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component'\r\nimport CollectionPage from '../collection/collection.component'\r\nimport { updateCollections } from '../../redux/shop/shop.actions'\r\nimport { selectCollectionsForPreview } from '../../redux/shop/shop.selector'\r\n\r\nclass ShopPage extends React.Component{\r\n\r\n    unsuscribedFromSnapshot = null;\r\n\r\n    componentDidMount(){\r\n        const {updateCollections} = this.props\r\n        const collectionRef = firestore.collection('collections')\r\n        console.log(\"HEEERE\")\r\n        console.log(collectionRef)\r\n\r\n        this.unsuscribedFromSnapshot = collectionRef.onSnapshot(async snapshot =>{\r\n           const collectionsMap = convertCollectionSnapshotToMap(snapshot)\r\n           updateCollections(collectionsMap)\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {match} = this.props\r\n        return(\r\n            <div className=\"shop-page\">\r\n                <Route exact path={`${match.path}`} component={CollectionsOverview}/>\r\n                <Route  path = {`${match.path}/:collectionId`}  component={CollectionPage}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage)"]},"metadata":{},"sourceType":"module"}