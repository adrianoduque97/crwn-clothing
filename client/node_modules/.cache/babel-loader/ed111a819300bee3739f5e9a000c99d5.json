{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adria\\\\Documents\\\\GitHub\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectIsCollectionLoaded } from '../../redux/shop/shop.selector';\nimport WithSpinner from '../../HOC/with-spinner/with-spinner.component';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      isFetching,\n      isLoaded\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 71\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isLoaded\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 83\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isFetching: selectIsCollectionFetching,\n  isLoaded: selectIsCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/adria/Documents/GitHub/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","createStructuredSelector","CollectionsOverview","CollectionPage","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionLoaded","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isFetching","isLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAAQC,0BAAR,EAAoCC,wBAApC,QAAmE,gCAAnE;AACA,OAAOC,WAAP,MAAwB,+CAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACL,mBAAD,CAAlD;AACA,MAAMO,yBAAyB,GAAGF,WAAW,CAACJ,cAAD,CAA7C;;AAEA,MAAMO,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAsC;AAElCC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACR,MAAAA;AAAD,QAA+B,KAAKS,KAA1C;AACAT,IAAAA,0BAA0B;AAC7B;;AACDU,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKF,KAArB;AACA,UAAM;AAACG,MAAAA,UAAD;AAAaC,MAAAA;AAAb,QAAyB,KAAKJ,KAApC;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAGL,KAAD,iBAAU,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEG;AAA3C,SAA2DH,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAQ,MAAA,IAAI,EAAK,GAAEE,KAAK,CAACG,IAAK,gBAA9B;AAAgD,MAAA,MAAM,EAAGL,KAAD,iBAAU,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAE,CAACI;AAAvC,SAAqDJ,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAfiC;;AAkBtC,MAAMM,eAAe,GAAGlB,wBAAwB,CAAC;AAC7Ce,EAAAA,UAAU,EAAEX,0BADiC;AAE7CY,EAAAA,QAAQ,EAAEX;AAFmC,CAAD,CAAhD;;AAKA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAK;AACpCjB,EAAAA,0BAA0B,EAAE,MAAKiB,QAAQ,CAACjB,0BAA0B,EAA3B;AADL,CAAL,CAAnC;;AAIA,eAAeJ,OAAO,CAACmB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CV,QAA7C,CAAf","sourcesContent":["import React from 'react'\r\nimport {Route} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {createStructuredSelector} from 'reselect'\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component'\r\nimport CollectionPage from '../collection/collection.component'\r\n\r\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions'\r\nimport {selectIsCollectionFetching, selectIsCollectionLoaded} from '../../redux/shop/shop.selector'\r\nimport WithSpinner from '../../HOC/with-spinner/with-spinner.component'\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component{\r\n \r\n    componentDidMount(){\r\n        const {fetchCollectionsStartAsync} = this.props\r\n        fetchCollectionsStartAsync()\r\n    }\r\n    render(){\r\n        const {match} = this.props\r\n        const {isFetching, isLoaded} = this.props\r\n        return(\r\n            <div className=\"shop-page\">\r\n                <Route exact path={`${match.path}`} render={(props)=> <CollectionsOverviewWithSpinner isLoading={isFetching} {...props}/>}/>\r\n                <Route  path = {`${match.path}/:collectionId`}  render={(props)=> <CollectionPageWithSpinner isLoading={!isLoaded} {...props}/>}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isFetching: selectIsCollectionFetching,\r\n    isLoaded: selectIsCollectionLoaded\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchCollectionsStartAsync: ()=> dispatch(fetchCollectionsStartAsync())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage)"]},"metadata":{},"sourceType":"module"}