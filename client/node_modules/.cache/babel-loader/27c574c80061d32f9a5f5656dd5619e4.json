{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBnQ62bKTnFqyR_SWvXCTwvqVCi3Xu7xHU\",\n  authDomain: \"crwn-clothing-db-3ecec.firebaseapp.com\",\n  databaseURL: \"https://crwn-clothing-db-3ecec.firebaseio.com\",\n  projectId: \"crwn-clothing-db-3ecec\",\n  storageBucket: \"crwn-clothing-db-3ecec.appspot.com\",\n  messagingSenderId: \"9941383676\",\n  appId: \"1:9941383676:web:7f21813389c80437329a79\",\n  measurementId: \"G-P628ZLCXHZ\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const collectionsRef = firestore.collection('users');\n  const snapShot = await userRef.get();\n  const collectionSnapShot = await collectionsRef.get();\n  console.log(`HEEERE /n`);\n  console.log({\n    collection: collectionSnapShot.docs.map(x => x.data() + 78)\n  });\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (e) {\n      console.log(e.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account '\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/adria/Documents/GitHub/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","collectionsRef","collection","snapShot","get","collectionSnapShot","console","log","docs","map","x","data","exists","displayName","email","createdAt","Date","set","e","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,IAAIC,cAAc,GAAG;AACjBC,EAAAA,MAAM,EAAE,yCADS;AAEjBC,EAAAA,UAAU,EAAE,wCAFK;AAGjBC,EAAAA,WAAW,EAAE,+CAHI;AAIjBC,EAAAA,SAAS,EAAE,wBAJM;AAKjBC,EAAAA,aAAa,EAAE,oCALE;AAMjBC,EAAAA,iBAAiB,EAAE,YANF;AAOjBC,EAAAA,KAAK,EAAE,yCAPU;AAQjBC,EAAAA,aAAa,EAAE;AARE,CAArB;AAWE,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAmC;AAC1E,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,cAAc,GAAGH,SAAS,CAACI,UAAV,CAAqB,OAArB,CAAvB;AACA,QAAMC,QAAQ,GAAG,MAAON,OAAO,CAACO,GAAR,EAAxB;AACA,QAAMC,kBAAkB,GAAG,MAAOJ,cAAc,CAACG,GAAf,EAAlC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAa,WAAb;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACL,IAAAA,UAAU,EAAEG,kBAAkB,CAACG,IAAnB,CAAwBC,GAAxB,CAA4BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAS,EAA1C;AAAb,GAAZ;;AAEA,MAAG,CAACR,QAAQ,CAACS,MAAb,EAAoB;AAClB,UAAM;AAACC,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAAuBnB,QAA7B;AACA,UAAMoB,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAG;AACD,YAAMnB,OAAO,CAACoB,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGnB;AAJa,OAAZ,CAAN;AAOD,KARD,CAQC,OAAMsB,CAAN,EAAQ;AACPZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,CAAC,CAACC,OAAd;AAED;AAEF;;AACD,SAAOtB,OAAP;AACD,CA7BM;AA+BTb,QAAQ,CAACoC,aAAT,CAAuBnC,cAAvB;AAEA,OAAO,MAAMoC,IAAI,GAAGrC,QAAQ,CAACqC,IAAT,EAAb;AACP,OAAO,MAAMvB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAGP,MAAMwB,QAAQ,GAAG,IAAItC,QAAQ,CAACqC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAetC,QAAf","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBnQ62bKTnFqyR_SWvXCTwvqVCi3Xu7xHU\",\r\n    authDomain: \"crwn-clothing-db-3ecec.firebaseapp.com\",\r\n    databaseURL: \"https://crwn-clothing-db-3ecec.firebaseio.com\",\r\n    projectId: \"crwn-clothing-db-3ecec\",\r\n    storageBucket: \"crwn-clothing-db-3ecec.appspot.com\",\r\n    messagingSenderId: \"9941383676\",\r\n    appId: \"1:9941383676:web:7f21813389c80437329a79\",\r\n    measurementId: \"G-P628ZLCXHZ\"\r\n  };\r\n\r\n  export const createUserProfileDocument = async (userAuth, additionalData) =>{\r\n    if(!userAuth) return;\r\n\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`)\r\n    const collectionsRef = firestore.collection('users')\r\n    const snapShot = await  userRef.get()\r\n    const collectionSnapShot = await  collectionsRef.get()\r\n    console.log(`HEEERE /n`)\r\n    console.log({collection: collectionSnapShot.docs.map(x => x.data()+78)})\r\n\r\n    if(!snapShot.exists){\r\n      const {displayName, email} = userAuth\r\n      const createdAt = new Date()\r\n\r\n      try{\r\n        await userRef.set({\r\n          displayName,\r\n          email,\r\n          createdAt,\r\n          ...additionalData\r\n        })\r\n\r\n      }catch(e){\r\n        console.log(e.message)\r\n\r\n      }\r\n\r\n    }\r\n    return userRef\r\n  }\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nexport const auth = firebase.auth()\r\nexport const firestore = firebase.firestore()\r\n\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider()\r\nprovider.setCustomParameters({prompt: 'select_account '})\r\n\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider)\r\n\r\nexport default firebase\r\n"]},"metadata":{},"sourceType":"module"}