{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adria\\\\Documents\\\\GitHub\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../HOC/with-spinner/with-spinner.component';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsuscribedFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections'); //Biilt in with fetch\n\n    fetch(\"https://firestore.googleapis.com/v1/projects/crwn-clothing-db-3ecec/databases/(default)/documents/collections\").then(response => response.json()).then(collection => console.log(collection)); // Built in like promise\n    // collectionRef.get().then(snapshot =>{\n    //        const collectionsMap = convertCollectionSnapshotToMap(snapshot)\n    //        updateCollections(collectionsMap)\n    //        this.setState({loading:false})\n    // })\n    // Built in from FIREBASE\n    // this.unsuscribedFromSnapshot = collectionRef.onSnapshot(async snapshot =>{\n    //    const collectionsMap = convertCollectionSnapshotToMap(snapshot)\n    //    updateCollections(collectionsMap)\n    //    this.setState({loading:false})\n    // })\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 71\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 83\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/adria/Documents/GitHub/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","firestore","convertCollectionSnapshotToMap","CollectionsOverview","CollectionPage","updateCollections","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsuscribedFromSnapshot","componentDidMount","props","collectionRef","collection","fetch","then","response","json","console","log","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,EAAmBC,8BAAnB,QAAwD,+BAAxD;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,WAAP,MAAwB,+CAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACH,mBAAD,CAAlD;AACA,MAAMK,yBAAyB,GAAGF,WAAW,CAACF,cAAD,CAA7C;;AAEA,MAAMK,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAElCC,KAFkC,GAE3B;AACHC,MAAAA,OAAO,EAAE;AADN,KAF2B;AAAA,SAMlCC,uBANkC,GAMR,IANQ;AAAA;;AAQlCC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACT,MAAAA;AAAD,QAAsB,KAAKU,KAAjC;AACA,UAAMC,aAAa,GAAGf,SAAS,CAACgB,UAAV,CAAqB,aAArB,CAAtB,CAFe,CAIf;;AACAC,IAAAA,KAAK,CAAC,+GAAD,CAAL,CACKC,IADL,CACWC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADvB,EACwCF,IADxC,CAC6CF,UAAU,IAAIK,OAAO,CAACC,GAAR,CAAYN,UAAZ,CAD3D,EALe,CAQf;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACH;;AAEDO,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKV,KAArB;AACA,UAAM;AAACH,MAAAA;AAAD,QAAY,KAAKD,KAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEc,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAGX,KAAD,iBAAU,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEH;AAA3C,SAAwDG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAQ,MAAA,IAAI,EAAK,GAAEU,KAAK,CAACC,IAAK,gBAA9B;AAAgD,MAAA,MAAM,EAAGX,KAAD,iBAAU,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAmDG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAzCiC;;AA4CtC,MAAMY,kBAAkB,GAAGC,QAAQ,KAAK;AACpCvB,EAAAA,iBAAiB,EAAEwB,cAAc,IAAID,QAAQ,CAACvB,iBAAiB,CAACwB,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAIA,eAAe7B,OAAO,CAAC,IAAD,EAAO2B,kBAAP,CAAP,CAAkClB,QAAlC,CAAf","sourcesContent":["import React from 'react'\r\nimport {Route} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {firestore, convertCollectionSnapshotToMap} from '../../firebase/firebase.utils'\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component'\r\nimport CollectionPage from '../collection/collection.component'\r\nimport { updateCollections } from '../../redux/shop/shop.actions'\r\nimport WithSpinner from '../../HOC/with-spinner/with-spinner.component'\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component{\r\n\r\n    state ={\r\n        loading: true\r\n    }\r\n     \r\n    unsuscribedFromSnapshot = null;\r\n\r\n    componentDidMount(){\r\n        const {updateCollections} = this.props\r\n        const collectionRef = firestore.collection('collections')\r\n\r\n        //Biilt in with fetch\r\n        fetch(\"https://firestore.googleapis.com/v1/projects/crwn-clothing-db-3ecec/databases/(default)/documents/collections\")\r\n            .then( response => response.json()).then(collection => console.log(collection))\r\n\r\n        // Built in like promise\r\n        // collectionRef.get().then(snapshot =>{\r\n        //        const collectionsMap = convertCollectionSnapshotToMap(snapshot)\r\n        //        updateCollections(collectionsMap)\r\n        //        this.setState({loading:false})\r\n        // })\r\n\r\n        // Built in from FIREBASE\r\n\r\n        // this.unsuscribedFromSnapshot = collectionRef.onSnapshot(async snapshot =>{\r\n        //    const collectionsMap = convertCollectionSnapshotToMap(snapshot)\r\n        //    updateCollections(collectionsMap)\r\n        //    this.setState({loading:false})\r\n        // })\r\n    }\r\n\r\n    render(){\r\n        const {match} = this.props\r\n        const {loading} = this.state\r\n        return(\r\n            <div className=\"shop-page\">\r\n                <Route exact path={`${match.path}`} render={(props)=> <CollectionsOverviewWithSpinner isLoading={loading} {...props}/>}/>\r\n                <Route  path = {`${match.path}/:collectionId`}  render={(props)=> <CollectionPageWithSpinner isLoading={loading} {...props}/>}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage)"]},"metadata":{},"sourceType":"module"}